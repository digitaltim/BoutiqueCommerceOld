1) work on todo list

finish infrastructure functionality

- CRUD
-- update schema - remove unused tables, change unique indexes to unique constraints, drop default '' and not nullable for not nullable fields on a case by case basis.
-- test all tables
--- fix any FF/validation errors
--- create custom dbtable models as necessary (defer until infrastructure complete)
--- render views, error views and messages from CrudView
--- display error for update with no changes made
--- add cancel buttons on insert and update
--- why does view render call not work in setModel (CrudView and CrudController)? (and DRY)

- Nav Admin
-- item configurability
-- messaging (flash? may be able to simply pass from controller to view)
-- nav should not show in sign in page (admin dir)
-- make sure {LOCAL TESTING} appears only for dev

- Authentication
-- change to use FF, new Validator, and AdminsModel
-- config var for session timeout
-- view should be on admin route only ($config['dirs']['admin'])
-- only owner/director can insert new admins (see Authorization)
-- upon successful login set response to desired route/page

- Authorization (page level, admin nav, functionality - ie only owner/director can enter new admins - see DbTable::hasInsertPermission())
-- change admins.permissions to admins.role as a varchar (50) that is controlled in the app - enum var with options: (Owner, Director, Manager, Admin, Store, Vendor, Bookkeeper) Shipper(?)

- What is the point of controller / factories registration in dependencies?

- do we need FF input to Twig in dependencies?

- do we need to instantiate services in base Controller and AdminView? (plus DRY)

- docs
-- structure (which docs will be displayed in the admin?)

- what to do about commits for js/scss mods (get .map files - ignore? what about frontend js/css?)

- database backup script (cron?)

- customize Page Not Found error: https://btq/CRUD/testimonials/delete/

- Improve directory structure: (?) *, **

- can we use named routes in UiRsDbTable?

- Group the routes

- use regex for Validator::isDbDate() and isDbTimestamp

- utilities functions.php - remove unused functions. remove functions based on old page controller model that don't apply to front controller.

- find a better place for getFormFieldFromDbColumn()

- log events

- optimize, document & test infrastructure
-- use typehints on params and return params
-- docblocks for all classes, methods, properties (?)
-- Create installation instructions
-- how to prevent xss from rogue admins? (chunk of html problem: https://www.perl.com/pub/2002/02/20/css.html). does twig prevent it or does |raw thwart that? => using |raw is potentiall unsafe: https://vivait.co.uk/labs/safely-escape-twigs-json_encode-without-using-raw

- fork infrastructure to a new repo
-- the schema should only contain the admins table and maybe a test table

* possible directory structure
BoutiqueCommerce
.gitignore
composer.json
composer.lock
gulpfile.js
LICENSE.md
postgresDump.sql
-app
-routes.php
--config
--controllers
--infrastructure
--Auth.php
---database
---services
--middleware
--models
--public
--services
--ui
--utilities
-docs
-node_modules
-prebuild
-storage
-vendor

** alternate possible dir struct
BoutiqueCommerce
.gitignore
composer.json
composer.lock
LICENSE.md
README.md
pgDbSchemaDump.sql
-src
 -public
  .htaccess
  index.php
  -css..
  -js..
 -infrastructure
  NavAdmin.php
  -CRUD
   CrudController.php
   CrudView.php
  -Authentication
   AuthenticationController.php
   AuthenticationView.php
   AuthenticationMiddleware.php
   GuestMiddleware.php
  -Authorization..
  -Database
   DbTable.php
   DbColumn.php
   PgDbAccessService.php
   -QueryBuilder
    QueryBuilder.php
    InsertUpdateBuilder.php
    InsertBuilder.php
    UpdateBuilder.php
  -Utilities
   CsrfViewMiddleware.php
   OldInputMiddleware.php (?)
   ValidatorService.php
   PhpMailerService.php
   MessagingAdmin.php (? - flash)
 -config..
  routes.php
 -domain (ie biz)
  Nav.php
  -BusinessObjects
   OrdersModel.php
   CustomersModel.php
   ..
  -Views
   -Admin.. (pages ie OrdersListView.php)
   -Public.. (pages ie AboutUsView.php)
 -templates
-docs..
-prebuild
 gulpfile.js
 -js..
 -scss..

-vendor..
-storage
 -cache..
 -logs..
